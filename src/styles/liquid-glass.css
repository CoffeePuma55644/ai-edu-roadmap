/* === Liquid Glass iOS 26 - Core Styles === */

/* Base variables for the glass effect. Can be overridden by inline styles. */
:root {
  --glass-blur: 22px;
  --glass-saturation: 1.32;
  --glass-contrast: 1.1;
  --glass-opacity-light: 0.14;
  --glass-opacity-dark: 0.14;
  --glass-border-color-light: rgba(255, 255, 255, 0.22);
  --glass-border-color-dark: rgba(255, 255, 255, 0.18);
  --glass-inset-highlight-light: rgba(255, 255, 255, 0.25);
  --glass-inset-highlight-dark: rgba(255, 255, 255, 0.28);
  --glass-shadow-color: rgba(0, 0, 0, 0.18);
}

/* --- LITE VARIANT (CSS ONLY) --- */
.glass {
  position: relative;
  border-radius: 20px; /* Default, can be overridden by utilities */
  
  /* Light Mode Background */
  background-color: rgba(255, 255, 255, var(--glass-opacity-light));
  border: 1px solid var(--glass-border-color-light);
  box-shadow: 
    inset 0 1px 0 var(--glass-inset-highlight-light),
    0 8px 24px var(--glass-shadow-color);

  /* Backdrop Filter */
  -webkit-backdrop-filter: blur(var(--glass-blur)) saturate(var(--glass-saturation)) contrast(var(--glass-contrast));
  backdrop-filter: blur(var(--glass-blur)) saturate(var(--glass-saturation)) contrast(var(--glass-contrast));
}

/* Dark Mode Adjustments */
.dark .glass {
  background-color: rgba(0, 0, 0, var(--glass-opacity-dark));
  border: 1px solid var(--glass-border-color-dark);
  box-shadow: 
    inset 0 1px 0 var(--glass-inset-highlight-dark),
    0 8px 24px var(--glass-shadow-color);
}

/* Dynamic Highlight/Sheen Effect */
.glass::after {
  content: '';
  position: absolute;
  inset: 0;
  width: 100%;
  height: 100%;
  border-radius: inherit; /* Match parent's border-radius */
  pointer-events: none;
  mix-blend-mode: screen;
  background:
    radial-gradient(120% 120% at -10% -10%, rgba(255, 255, 255, 0.20), transparent 40%),
    radial-gradient(120% 120% at 110% 0%, rgba(255, 255, 255, 0.10), transparent 40%);
  animation: sheen 8s linear infinite;
  opacity: var(--glass-highlight-amount, 1);
}

@keyframes sheen {
  0% { transform: translateX(-2%) translateY(-1%); }
  50% { transform: translateX(2%) translateY(1%); }
  100% { transform: translateX(-2%) translateY(-1%); }
}


/* --- LENS VARIANT (SVG FILTER) --- */
.glass-lens::before {
  content: '';
  position: absolute;
  inset: -8%; /* Apply filter on a larger area to avoid hard edges */
  pointer-events: none;
  filter: url(#liquidRefraction);
  background: inherit; /* Inherit the wallpaper from the parent */
  background-attachment: fixed;
  opacity: 0.9;
  z-index: 0; /* Ensure it's behind the content */
}

/* The main element needs to be isolated to create a new stacking context */
.glass-lens {
  isolation: isolate;
}

/* The content inside the glass lens needs to be on top of the ::before pseudo-element */
.glass-lens > * {
  position: relative;
  z-index: 1;
}


/* --- ACCESSIBILITY & PREFERENCES --- */

/* Reduced Transparency: Fallback to an opaque, grained surface */
@media (prefers-reduced-transparency: reduce) {
  .glass, .dark .glass {
    background-image: url('/assets/grain.png');
    background-color: rgba(240, 240, 240, 0.95); /* Opaque light */
    -webkit-backdrop-filter: none;
    backdrop-filter: none;
    border-color: rgba(0, 0, 0, 0.1);
  }
  .dark .glass {
    background-color: rgba(30, 30, 30, 0.95); /* Opaque dark */
    border-color: rgba(255, 255, 255, 0.1);
  }
  .glass-lens::before {
    display: none;
  }
}

/* Reduced Motion: Disable animations */
@media (prefers-reduced-motion: reduce) {
  .glass::after {
    animation: none;
  }
}